
Subject : [ELU605] Soumission PR

Bonjour,

Nom Prénom : TAGRO Rabet Romuald Jean Martial

URL du Compte github : https://github.com/JM0007

Nom du projet : ansible/ansible

Url des Pull Requests : https://github.com/ansible/ansible/pull/30696 (Echec Pull request (PR))
                        https://github.com/ansible/ansible/pull/30707 (PR mergée)
                        https://github.com/ansible/ansible/pull/30742 (PR mergée)
                       



Cordialement,


                                         ÉTUDE SUR LA CONTRIBUTION A UN PROJET LIBRE PYTHON : 
                                                         CAS  D’ANSIBLE 


Année académique : 2017/2018                                                                          
IMT Atlantique -Brest

ELU 605: ÉTUDE SUR LA CONTRIBUTION A UN PROJET LIBRE PYTHON : 
CAS  D’ANSIBLE

Étudiant :                                                                               
Tagro Rabet Romuald Jean Martial                               

Professeur :
M. Rodolphe Quiédeville




I- PRÉSENTATION 

ANSIBLE est un outil de configuration et d’orchestration destiné essentiellement au administrateurs système. Il a été codé en python et permet notamment l’automatisation du déploiement d’applications, de la configuration de serveurs ou d’équipements réseaux. 



II- HISTORIQUE ET GOUVERNANCE

ANSIBLE est un projet Open-source de Python crée en 2013 et racheté par Red Hat qui est l’une des multinationales d’origine américaine les plus importantes et reconnues dédiée aux logiciels Open Source. Sa création a été motivée par la volonté d’offrir un outil puissant et extrêmement simple aux administrateurs Python, motivé en parti d’une idée de notoriété du langage de programmation.
Ansible est devenu très attractif et cela est dû à plusieurs facteurs. Red Hat a toujours voulu entretenir la popularité d’Ansible : « Ansible entrait dans un tiers de tous les contrats Red Hat »
affirma le CEO de Red Hat, Jim Whitehurst. 
En effet cela vise à attrirer aussi les Entreprises à opter pour cette solution (avec une surcouche Ansible payante pour les Entreprises) d’autant plus que le rachat par Red Hat a sans doute augmenté la crédibilité du support d’Ansible.



III- POLITIQUE DE CONTRIBUTIONS 

Comme la plupart des open-source, Ansible s’inscrit dans une politique de contributions ouvertes à l’amélioration de son code source et son évolution en général. 
A ce propos, un atelier fait l’actualité autour de ce sujet avec une 1ère séance tenue lors des sprints PyConFR 2017 à Toulouse du 21 au 24 Septembre 2017 où les participants apprennent, avec l'aide de deux contributeurs Ansible (un membre de la core team et un membre du Testing Working Group) à contribuer à des modules Ansible existants en :
- de corrigeant  eux-mêmes les bugs éventuellement rencontrés par les participants déjà utilisateurs d'Ansible ;
- apprennant à contribuer à un logiciel libre ;
- maîtrisant Ansible ;

Au cours de cet atelier, plusieurs contributions ont été réalisées. Quelles sont-elles ?

EXEMPLES DE CONTRIBUTIONS RÉALISÉES

Pull-request rejetée

1) On a dans cet exemple une pull request rejetée de dj4ngo qui n'a pas pu voir sa PR mergée car selon un commentaire des tests liés au problème renvoyaient une erreur due à son fichier modifié "docker_services_py35_compat"  ( un des 2 commits du contributeur avait été pourtant accepté) 
(lien vers la PR:https://github.com/ansible/ansible/pull/30696 )
 

2) un autre exemple ici est la vérification et la fermeture d'un rapport de bug obsolète sur le module iptables pour Ansible (tous les détails sur https://github.com/ansible/ansible/issues/21182). 
Ici le contributeur (p53) a ouvert une ‘Issue’ sur un rapport sur un bug , qui s’est vu fermée car ce problème (bug) était obsolète. La pull request émise n’a pas été mergée.


Pull requests mergées

1) mise à jour de la liste des maintainers
( plus d’informations sur https://github.com/ansible/ansible/pull/30742)
 
On a dans ce cas l’acceptation par l’auteur original du dépôt des modifications/ corrections et les branches des contributions acceptées ont donc fusionnées avec la branche principale master ( ici répertoire principal « ansible : devel ») .  S-hertel a vu son’ Issue’(problème soulevé ) resolu par le contributeur msherer sur le fichier modifié ignore_obrien ) et a donc accepté la requête de ceui-ci pour fusionner sa branche sur la branche principale. C’est comme une nouvelle photo (1 commit ,nouvelle version ) du projet qu’il a envoyé. 
Le nom du problème résolu dans la description du commit est « #30742 »

2) l’ajout d'un test unitaire pour le plugin d'inventaire YAML
( plus d’informations sur https://github.com/ansible/ansible/pull/30707 )

Ici également, la branche créée par mattclay pour résoudre le problème a été fusionné à la branche principale.
Ici mattclay a ‘validé’ 6 états du projet (6 commits) que lui a balancés 4383 à travers sa pull requests. 


Il convient de remarquer un nombre généralement élevé de forks afin d’avoir une permission (autant les contributions à des problèmes sont nombreux) et il est nécessaire de faire un fork  ( comme un ‘mirroir’ du projet qu’on regarde et qui ne nous appartient pas pour en avoir une version à nous pour modifier) car on est en Open-source et pour éviter des codes innombrables venant de toute part dans le cadre d’un projet, il est important d’avoir un système de validation.  
 



IV- PERSPECTIVES

Red Hat, qui mise gros dans la notoriété d’Ansible et la maturité de l’outils continue d’être favorable à la formation des développeurs Pythons mais également des chercheurs , étudiants sur la questions du développement des modules Ansibles. Un second atelier sur la question est organisé depuis le mardi 21 novembre 2017 et s’étendra sur une semaine. Son but est de former et informer sur les contributions au niveau des aspects suivants : 
- vérification, amélioration de la compatibilité des modules avec Python 3
- corrections de bugs existants
- révisions de pull-requests existantes
- ajout de tests unitaires (tox/mock) et d'intégration (Docker/LXC) 
- amélioration/correction de la documentation d’Ansible.
L'atelier a débuté par une présentation du "Workflow de contribution" pour les apprentis contributeurs:
- structure du dépôt Git
- fonctionnement du système d'intégration continue (CI)
- workflows de contribution notamment la description des labels GitHub utilisés et une présentation du bot utilisé pour trier les issues et pull requests Github.





WEBOGRAPHIE

https://github.com/ansible/ansible/pull/30696 
https://github.com/ansible/ansible/issues/21182
https://github.com/ansible/ansible/pull/30742
https://github.com/ansible/ansible/pull/30707
https://www.ansible.com/quick-start-video 
https://www.evensi.fr/contribuer-a-un-projet-python-libre-lexemple-dansible-12/232732650 
https://www.youtube.com/watch?v=QL6zJH_-l_Q 
http://www.lemondeinformatique.fr/actualites/lire-la-fondation-eclipse-devoile-son-projet-de-transition-eclipse-entreprise-for-java-ee4j-70065.html https://github.com/ansible/ansible/labels/affects_2.5
